C51 COMPILER V9.53.0.0   SCHEDULE                                                          03/04/2015 20:41:28 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE SCHEDULE
OBJECT MODULE PLACED IN schedule.OBJ
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE schedule.c OPTIMIZE(8,SPEED) DEFINE(KEIL) DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          /*C*****************************************************************************
   2          * FILE_NAME         : scheduler.c                                             
   3          *----------------------------------------------------------------------------
   4          * FILE_CREATED_BY   : BERTHY JS                                             
   5          * FILE_CREATION_DATE: 4/05/00                                              
   6          *----------------------------------------------------------------------------
   7          * FILE_PURPOSE:    
   8          *
   9          ******************************************************************************/
  10          /*_____ I N C L U D E - F I L E S ____________________________________________*/
  11          #include "config.h"
  12          #include "schedule.h"
  13          #include "schedule_conf.h"
  14          
  15          /*_____ P R I V A T E - F U N C T I O N S - D E C L A R A T I O N ____________*/
  16          void call_next_task(void);
  17          
  18          
  19          /*_____ L O C A L S __________________________________________________________*/
  20          
  21          Uchar task_in_progress; 
  22          
  23          
  24          /*_____ P U B L I C - F U N C T I O N S ______________________________________*/
  25          
  26          
  27          /*F**************************************************************************
  28          * FUNCTION_NAME: schedule                                             
  29          *----------------------------------------------------------------------------
  30          * FUNCTION_AUTHOR: BERTHY J.S.                                              
  31          * FUNCTION_DATE  :                                                  
  32          *----------------------------------------------------------------------------
  33          * FUNCTION_PURPOSE:                          
  34          * FUNCTION_INPUTS : 
  35          * FUNCTION_OUTPUTS:                                                    
  36          *----------------------------------------------------------------------------
  37          * GLOBAL VARIABLES USED :
  38          ******************************************************************************
  39          * NOTE:                                                                      
  40          ******************************************************************************/
  41          void schedule(void)
  42          {
  43   1        switch(task_in_progress)
  44   1        {
  45   2          case SCHED_TASK_1:
  46   2        {
  47   3          TASK_1;
  48   3          call_next_task();
  49   3          break;
  50   3        }
  51   2          case SCHED_TASK_2:
  52   2        {
  53   3          TASK_2;
  54   3          call_next_task();
  55   3          break;
C51 COMPILER V9.53.0.0   SCHEDULE                                                          03/04/2015 20:41:28 PAGE 2   

  56   3        }
  57   2          case SCHED_TASK_3:
  58   2        {
  59   3          TASK_3;
  60   3          call_next_task();
  61   3          break;
  62   3        }
  63   2          case SCHED_TASK_4:
  64   2        {
  65   3          TASK_4;
  66   3          call_next_task();
  67   3          break;
  68   3        }
  69   2          case SCHED_TASK_5:
  70   2        {
  71   3          TASK_5;
  72   3          call_next_task();
  73   3          break;
  74   3        }
  75   2          case SCHED_TASK_6:
  76   2        {
  77   3          TASK_6;
  78   3          call_next_task();
  79   3          break;
  80   3        }
  81   2          case SCHED_TASK_7:
  82   2        {
  83   3          TASK_7;
  84   3          call_next_task();
  85   3          break;
  86   3        }
  87   2          case SCHED_TASK_8:
  88   2        {
  89   3          TASK_8;
  90   3          call_next_task();
  91   3          break;
  92   3        }
  93   2          case SCHED_TASK_9:
  94   2        {
  95   3          TASK_9;
  96   3          call_next_task();
  97   3          break;
  98   3        }
  99   2          case SCHED_TASK_10:
 100   2        {
 101   3          TASK_10;
 102   3          call_next_task();
 103   3          break;
 104   3        }
 105   2          default:
 106   2        {
 107   3          break;
 108   3        }
 109   2        }
 110   1      }
 111          
 112          /*F**************************************************************************
 113          * FUNCTION_NAME: schedule_init                                             
 114          *----------------------------------------------------------------------------
 115          * FUNCTION_AUTHOR: BERTHY J.S.                                              
 116          * FUNCTION_DATE  : 4/05/00                                                 
 117          *----------------------------------------------------------------------------
C51 COMPILER V9.53.0.0   SCHEDULE                                                          03/04/2015 20:41:28 PAGE 3   

 118          * FUNCTION_PURPOSE:                          
 119          * FUNCTION_INPUTS : void
 120          * FUNCTION_OUTPUTS: void                                                                                  
             -                               
 121          ******************************************************************************/
 122          void schedule_init(void)
 123          {
 124   1        task_in_progress = SCHED_TASK_1;
 125   1        INIT_TASK_1;  
 126   1        INIT_TASK_2;  
 127   1        INIT_TASK_3;  
 128   1        INIT_TASK_4;  
 129   1        INIT_TASK_5;  
 130   1        INIT_TASK_6;  
 131   1        INIT_TASK_7;  
 132   1        INIT_TASK_8;  
 133   1        INIT_TASK_9;  
 134   1        INIT_TASK_10;  
 135   1      }
 136          
 137          /*F**************************************************************************
 138          * FUNCTION_NAME: activate_new_schedul                                             
 139          *----------------------------------------------------------------------------
 140          * FUNCTION_AUTHOR: BERTHY J.S.                                              
 141          * FUNCTION_DATE  : 4/05/00                                                 
 142          *----------------------------------------------------------------------------
 143          * FUNCTION_PURPOSE:                          
 144          * FUNCTION_INPUTS : void
 145          * FUNCTION_OUTPUTS: void                                                                                  
             -                               
 146          ******************************************************************************/
 147          void activate_new_schedul(void)
 148          {
 149   1        task_in_progress = SCHED_TASK_1;
 150   1      }
 151          
 152          
 153          /*_____ P R I V A T E - F U N C T I O N S ____________________________________*/
 154          
 155          
 156          /*F**************************************************************************
 157          * FUNCTION_NAME: call_next_task                                             
 158          *----------------------------------------------------------------------------
 159          * FUNCTION_AUTHOR: BERTHY J.S.                                              
 160          * FUNCTION_DATE  : 4/05/00                                                 
 161          *----------------------------------------------------------------------------
 162          * FUNCTION_PURPOSE:                          
 163          * FUNCTION_INPUTS : void
 164          * FUNCTION_OUTPUTS: void                                                                                  
             -                               
 165          ******************************************************************************/
 166          void call_next_task(void)
 167          {
 168   1        EA = 0;
 169   1        task_in_progress++;
 170   1        EA = 1;
 171   1      }
 172          
 173          /*F**************************************************************************
 174          * FUNCTION_NAME: default_schedul_fct                                             
 175          *----------------------------------------------------------------------------
 176          * FUNCTION_AUTHOR: BERTHY J.S.                                              
C51 COMPILER V9.53.0.0   SCHEDULE                                                          03/04/2015 20:41:28 PAGE 4   

 177          * FUNCTION_DATE  : 4/05/00                                                 
 178          *----------------------------------------------------------------------------
 179          * FUNCTION_PURPOSE:                          
 180          * FUNCTION_INPUTS : void
 181          * FUNCTION_OUTPUTS: void                                                                                  
             -                               
 182          ******************************************************************************/
 183          void default_schedule_fct(void)
 184          {
 185   1       
 186   1      }
 187          
 188          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    119    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      1    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
